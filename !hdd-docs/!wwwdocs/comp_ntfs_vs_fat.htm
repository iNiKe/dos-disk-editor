<html>

<head>
<!-- Meta http equivalent was here                                     -->
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>DM - NTFS и FAT: скорость</title>
<link rel="stylesheet" type="text/css" href="default.css">
</head>

<body topmargin="0" leftmargin="0" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">

<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td bgcolor="#D8D8D8" width="1%">&nbsp;</td>
<td width="1%" bgcolor="#D8D8D8">&nbsp;</td>
<td nowrap bgcolor="#D8D8D8" valign="top" align="center">
<p align="center"><b>NTFS и FAT: скорость</b></p>
</td>

<td width="50%" bgcolor="#D8D8D8">
<hr width="90%">
</td>
<td width="1%" bgcolor="#D8D8D8">&nbsp;</td>
</tr>
<tr>
<td width="1%" bgcolor="#D8D8D8">&nbsp;</td>
<td width="2%"></td>
<td valign="top" colspan="2" width="85%" class="ms10j">
<p>&nbsp;
<p>&nbsp;&nbsp; Данная статья представляет собой
материал, опубликованный на <a href="http://ixbt.stack.net/">iXBT</a>,
и написанный специально для этого. Тем не
менее он вполне хорошо будет смотреться и
на моём сайте.. :)<br>
&nbsp;&nbsp; Для начала, видимо, надо
прочесть статью <a href="comp_ntfs.htm">Структура NTFS</a>
- это поможет лучше понять некоторые
аспекты быстродействия, относящиеся к
системе NTFS.</p>
<hr>
<p>В этой статье я попытаюсь дать оценку
быстродействию файловых систем,
используемых в операционных системах
Windows95/98/ME, а также WindowsNT/2000. Статья не
содержит графиков и результатов
тестирований, так как эти результаты
слишком сильно зависят от случая, методик
тестирования и конкретных систем, и не
имеют почти никакой связи с реальным
положением дел. В этом материале я вместо
этого постараюсь описать общие тенденции и
соображения, связанные с
производительностью файловых систем.
Прочитав данный материал, вы получите
информацию для размышлений и сможете сами
сделать выводы, понять, какая система будет
быстрее в ваших условиях, и почему. Возможно,
некоторые факты помогут вам также
оптимизировать быстродействие своей
машины с точки зрения файловых систем,
подскажут какие-то решения, которые
приведут к повышению скорости работы всего
компьютера. В данном обзоре упоминаются три
системы - FAT (далее FAT16), FAT32 и NTFS, так как
основной вопрос, стоящий перед
пользователями Windows2000 - это выбор между
этими вариантами. Я приношу извинение
пользователям других файловых систем, но
проблема выбора между двумя, внешне
совершенно равнозначными, вариантами со
всей остротой стоит сейчас только в среде
Windows2000. Я надеюсь, всё же, что изложенные
соображения покажутся вам любопытными, и вы
сможете сделать какие-то выводы и о тех
системах, с которыми вам приходится
работать.</p>
<p>Данная статья состоит из множества
разделов, каждый из которых посвящен какому-то
одному вопросу быстродействия. Многие из
этих разделов в определенных местах тесно
переплетаются между собой. Тем не менее,
чтобы не превращать статью в кашу, в
соответствующем разделе я буду писать
только о том, что имеет отношение к
обсуждаемый в данный момент теме, и ни о чем
более. Если вы не нашли каких-то важных
фактов в тексте - не спешите удивляться:
скорее всего, вы встретите их позже. Прошу
вас также не делать никаких поспешных
выводов о недостатках и преимуществах той
или иной системы, так как противоречий и
подводных камней в этих рассуждениях очень
и очень много. В конце я попытаюсь собрать
воедино всё, что можно сказать о
быстродействии систем в реальных условиях.<br>
&nbsp;</p>
<h2><font face="Times New Roman">1. Теория</font></h2>
<p>Самое фундаментальное свойство любой
файловой системы, влияющее на
быстродействие всех дисковых операций -
структура организации и хранения
информации, т.е. то, как, собственно,
устроена сама файловая система. Первый
раздел - попытка анализа именно этого
аспекта работы, т.е. физической работы со
структурами и данными файловой системы.
Теоретические рассуждения, в принципе,
могут быть пропущены - те, кто интересуется
лишь чисто практическими аспектами
быстродействия файловых систем, могут
обратиться сразу ко второй части статьи.</p>
<p>Для начала хотелось бы заметить, что любая
файловая система так или иначе хранит файлы.
Доступ к данным файлов - основная и
неотъемлемая часть работы с файловой
системой, и поэтому прежде всего нужно
сказать пару слов об этом. Любая файловая
система хранит данные файлов в неких
объемах - секторах, которые используются
аппаратурой и драйвером как самая
маленькая единица полезной информации
диска. Размер сектора в подавляющем числе
современных систем составляет 512 байт, и все
файловые системы просто читают эту
информацию и передают её без какой либо
обработки приложениям. Есть ли тут какие-то
исключения? Практически нет. Если файл
хранится в сжатом или закодированном виде -
как это возможно, к примеру, в системе NTFS - то,
конечно, на восстановление или расшифровку
информации тратится время и ресурсы
процессора. В остальных случаях чтение и
запись самих данных файла осуществляется с
одинаковой скоростью, какую файловую
систему вы не использовали бы.</p>
<p>Обратим внимание на основные процессы,
осуществляемые системой для доступа к
файлам:</p>
<h4>Поиск данных файла</h4>
<p>Выяснение того, в каких областях диска
хранится тот или иной фрагмент файла -
процесс, который имеет принципиально
разное воплощение в различных файловых
системах. Имейте в виду, что это лишь поиск
информации о местоположении файла - доступ
к самим данным, фрагментированы они или нет,
здесь уже не рассматривается, так как этот
процесс совершенно одинаков для всех
систем. Речь идет о тех &quot;лишних&quot;
действиях, которые приходится выполнять
системе перед доступом к реальным данным
файлов.</p>
<p><strong>На что влияет этот параметр</strong>: на
скорость навигации по файлу (доступ к
произвольному фрагменту файла). Любая
работа с большими файлами данных и
документов, если их размер - несколько
мегабайт и более. Этот параметр показывает,
насколько сильно <em>сама файловая система</em>&nbsp;
страдает от фрагментации файлов.</p>
<ul>
  <li>NTFS способна обеспечить быстрый поиск
    фрагментов, поскольку вся информация
    хранится в нескольких очень компактных
    записях (типичный размер - несколько
    килобайт). Если файл очень сильно
    фрагментирован (содержит большое число
    фрагментов) - NTFS придется использовать
    много записей, что часто заставит хранить
    их в разных местах. Лишние движения
    головок при поиске этих данных, в таком
    случае, приведут к сильному замедлению
    процесса поиска данных о местоположении
    файла.
  <li>FAT32, из-за большой области самой таблицы
    размещения будет испытывать огромные
    трудности, если фрагменты файла
    разбросаны по всему диску. Дело в том, что
    FAT (File Allocation Table, таблица размещения файлов)
    представляет собой мини-образ диска, куда
    включен каждый его кластер. Для доступа к
    фрагменту файла в системе FAT16 и FAT32
    приходится обращаться к соответствующей
    частичке FAT. Если файл, к примеру,
    расположен в трех фрагментах - в начале
    диска, в середине, и в конце - то в системе
    FAT нам придется обратиться к фрагменту FAT
    также в его начале, в середине и в конце. В
    системе FAT16, где максимальный размер
    области FAT составляет 128 Кбайт, это не
    составит проблемы - вся область FAT просто
    хранится в памяти, или же считывается с
    диска целиком за один проход и
    буферизируется. FAT32 же, напротив, имеет
    типичный размер области FAT порядка сотен
    килобайт, а на больших дисках - даже
    несколько мегабайт. Если файл расположен
    в разных частях диска - это вынуждает
    систему совершать движения головок
    винчестера столько раз, сколько групп
    фрагментов в разных областях имеет файл,
    а это очень и очень сильно замедляет
    процесс поиска фрагментов файла.</li>
</ul>
<p><strong>Вывод:</strong> Абсолютный лидер - FAT16, он
никогда не заставит систему делать лишние
дисковые операции для данной цели. Затем
идет NTFS - эта система также не требует
чтения лишней информации, по крайней мере,
до того момента, пока файл имеет разумное
число фрагментов. FAT32 испытывает огромные
трудности, вплоть до чтения лишних сотен
килобайт из области FAT, если файл разбросан
по разным областям диска. Работа с
внушительными по размеру файлами на FAT32 в
любом случае сопряжена с огромными
трудностями - понять, в каком месте на диске
расположен тот или иной фрагмент файла,
можно лишь изучив всю последовательность
кластеров файла с самого начала,
обрабатывая за один раз один кластер (через
каждые 4 Кбайт файла в типичной системе).
Стоит отметить, что если файл
фрагментирован, но лежит компактной кучей
фрагментов - FAT32 всё же не испытывает
больших трудностей, так как физический
доступ к области FAT будет также компактен и
буферизован.</p>
<h4>Поиск свободного места</h4>
<p>Данная операция производится в том случае,
если файл нужно создать с нуля или
скопировать на диск. Поиск места под
физические данные файла зависит от того,
как хранится информация о занятых участках
диска.</p>
<p><strong>На что влияет этот параметр:</strong> на
скорость создания файлов, особенно больших.
Сохранение или создание в реальном времени
больших мультимедийных файлов (.wav, к
примеру), копирование больших объемов
информации, т.д. Этот параметр показывает,
насколько быстро система сможет найти
место для записи на диск новых данных, и
какие операции ей придется для этого
проделать.</p>
<ul>
  <li>Для определения того, свободен ли данный
    кластер или нет, системы на основе FAT
    должны просмотреть одну запись FAT,
    соответствующую этому кластеру. Размер
    одной записи FAT16 составляет 16 бит, одной
    записи FAT32 - 32 бита. Для поиска свободного
    места на диске может потребоваться
    просмотреть почти всего FAT - это 128 Кбайт (максимум)
    для FAT16 и до нескольких мегабайт (!) - в FAT32.
    Для того, чтобы не превращать поиск
    свободного места в катастрофу (для FAT32),
    операционной системе приходится идти на
    различные ухищрения.
  <li>NTFS имеет битовую карту свободного места,
    одному кластеру соответствует 1 бит. Для
    поиска свободного места на диске
    приходится оценивать объемы в десятки
    раз меньшие, чем в системах FAT и FAT32.</li>
</ul>
<p><strong>Вывод:</strong> NTFS имеет наиболее
эффективную систему нахождения свободного
места. Стоит отметить, что действовать &quot;в
лоб&quot; на FAT16 или FAT32 очень медленно, поэтому
для нахождения свободного места в этих
системах применяются различные методы
оптимизации, в результате чего и там
достигается приемлемая скорость. (Одно
можно сказать наверняка - поиск свободного
места при работе в DOS на FAT32 -
катастрофический по скорости процесс,
поскольку никакая оптимизация невозможна
без поддержки хоть сколь серьезной
операционной системы).</p>
<h4>Работа с каталогами и файлами</h4>
<p>Каждая файловая система выполняет
элементарные операции с файлами - доступ,
удаление, создание, перемещение и т.д.
Скорость работы этих операций зависит от
принципов организации хранения данных об
отдельных файлах и от устройства структур
каталогов.</p>
<p><strong>На что влияет этот параметр:</strong> на
скорость осуществления любых операций с
файлом, в том числе - на скорость любой
операции доступа к файлу, особенно - в
каталогах с большим числом файлов (тысячи).</p>
<ul>
  <li>FAT16 и FAT32 имеют очень компактные каталоги,
    размер каждой записи которых предельно
    мал. Более того, из-за сложившейся
    исторически системы хранения длинных
    имен файлов (более 11 символов), в
    каталогах систем FAT используется не очень
    эффективная и на первый взгляд неудачная,
    но зато очень экономная структура
    хранения этих самих длинных имен файлов.
    Работа с каталогами FAT производится
    достаточно быстро, так как в подавляющем
    числе случаев каталог (файл данных
    каталога) не фрагментирован и находится
    на диске в одном месте.<br>
    Единственная проблема, которая может
    существенно понизить скорость работы
    каталогов FAT - большое количество файлов в
    одном каталоге (порядка тысячи или более).
    Система хранения данных - линейный массив
    - не позволяет организовать эффективный
    поиск файлов в таком каталоге, и для
    нахождения данного файла приходится
    перебирать большой объем данных (в
    среднем - половину файла каталога).
  <li>NTFS использует гораздо более эффективный
    способ адресации - бинарное дерево, о
    принципе работы которого можно прочесть
    в другой статье (<a href="comp_ntfs.htm">Структура NTFS</a>). Эта организация позволяет
    эффективно работать с каталогами любого
    размера - каталогам NTFS не страшно
    увеличение количества файлов в одном
    каталоге и до десятков тысяч.<br>
    Стоит заметить, однако, что сам каталог NTFS
    представляет собой <em>гораздо</em>&nbsp; менее
    компактную структуру, нежели каталог FAT -
    это связано с гораздо большим (в
    несколько раз) размером одной записи
    каталога. Данное обстоятельство приводит
    к тому, что каталоги на томе NTFS в
    подавляющем числе случаев сильно
    фрагментированы. Размер типичного
    каталога на FAT-е укладывается в один
    кластер, тогда как сотня файлов (и даже
    меньше) в каталоге на NTFS уже приводит к
    размеру файла каталога, превышающему
    типичный размер одного кластера. Это, в
    свою очередь, почти гарантирует
    фрагментацию файла каталога, что, к
    сожалению, довольно часто сводит на нет
    все преимущества гораздо более
    эффективной организации самих данных.</li>
</ul>
<p><strong>Вывод:</strong> структура каталогов на NTFS
теоретически гораздо эффективнее, но при
размере каталога в несколько сотен файлов
это практически не имеет значения.
Фрагментация каталогов NTFS, однако, уверенно
наступает уже при таком размере каталога.
Для малых и средних каталогов NTFS, как это не
печально, имеет на практике меньшее
быстродействие.</p>
<p>Преимущества каталогов NTFS становятся
реальными и неоспоримыми только в том
случае, если в одно каталоге присутствуют
тысячи файлов - в этом случае
быстродействие компенсирует
фрагментированность самого каталога и
трудности с физическим обращением к данным
(в первый раз - далее каталог кэшируется).
Напряженная работа с каталогами,
содержащими порядка тысячи и более файлов,
проходит на NTFS буквально в несколько раз
быстрее, а иногда выигрыш в скорости по
сравнению с FAT и FAT32 достигает десятков раз.<br>
&nbsp;</p>
<h2><font face="Times New Roman">2. Практика</font></h2>
<p>К сожалению, как это часто бывает во
всевозможных компьютерных вопросах,
практика не очень хорошо согласуется с
теорией. NTFS, имеющая, казалось бы, очевидные
преимущества в структуре, показывает не
настолько уж фантастические результаты,
как можно было бы ожидать. Какие еще
соображения влияют на быстродействие
файловой системы? Каждый из
рассматриваемых далее вопросов вносит свой
вклад в итоговое быстродействие. Помните,
однако, что реальное быстродействие -
результат действия сразу всех факторов,
поэтому и в этой части статьи не стоит
делать поспешных выводов.</p>
<h3>2.1. Объем оперативной памяти (кэширование)</h3>
<p>Очень многие данные современных файловых
систем кэшируются или буферизируются в
памяти компьютера, что позволяет избежать
лишних операций физического чтения данных
с диска. Для нормальной (высокопроизводительной)
работы системы в кэше приходится хранить
следующие типы информации:</p>
<ul>
  <li>Данные о физическом местоположении всех
    открытых файлов. Это, прежде всего,
    позволит обращаться к системным файлам и
    библиотекам, доступ к которым идет
    буквально постоянно, без чтения
    служебной (не относящейся к самим файлам)
    информации с диска. Это же относится к тем
    файлам, которые исполняются в данный
    момент - т.е. к выполняемым модулям (.exe и .dll)
    активных процессов в системе. В эту
    категорию попадают также файлы системы, с
    которыми производится работа (прежде
    всего реестр и виртуальная память,
    различные .ini файлы, а также файлы
    документов и приложений).
  <li>Наиболее часто используемые каталоги. К
    таковым можно отнести рабочий стол, меню
    &quot;пуск&quot;, системные каталоги, каталоги
    кэша интернета, и т.п.
  <li>Данные о свободном месте диска - т.е. та
    информация, которая позволит найти место
    для сохранения на диск новых данных.</li>
</ul>
<p>В случае, если этот базовый объем
информации не будет доступен прямо в
оперативной памяти, системе придется
совершать множество ненужных операций еще
до того, как она начнет работу с реальными
данными. Что входит в эти объемы в разных
файловых системах? Или, вопрос в более
практической плоскости - каким объемом
свободной оперативной памяти надо
располагать, чтобы эффективно работать с
той или иной файловой системой?</p>
<ul>
  <li>FAT16 имеет очень мало данных, отвечающих
    за организацию файловой системы. Из
    служебных областей можно выделить только
    саму область FAT, которая не может
    превышать 128 Кбайт (!) - эта область
    отвечает и за поиск фрагментов файлов, и
    за поиск свободного места на томе.
    Каталоги системы FAT также очень компактны.
    Общий объем памяти, необходимый для
    предельно эффективной работы с FAT-ом,
    может колебаться от сотни килобайт и до
    мегабайта-другого - при условии огромного
    числа и размера каталогов, с которыми
    ведется работа.
  <li>FAT32 отличается от FAT16 лишь тем, что сама
    область FAT может иметь более внушительные
    размеры. На томах порядка 5 - 10 Гбайт
    область FAT может занимать объем в
    несколько Мбайт, и это уже очень
    внушительный объем, надежно кэшировать
    который не представляется возможным. Тем
    не менее, область FAT, а вернее те фрагменты,
    которые отвечают за местоположение
    рабочих файлов, в подавляющем
    большинстве систем находятся в памяти
    машины - на это расходуется порядка
    нескольких Мбайт оперативной памяти.
  <li>NTFS, к сожалению, имеет гораздо большие
    требования к памяти, необходимой для
    работы системы. Прежде всего, кэширование
    сильно затрудняет большие размеры
    каталогов. Размер одних только каталогов,
    с которыми активно ведет работу система,
    может запросто доходить до нескольких
    Мбайт и даже десятков Мбайт! Добавьте к
    этому необходимость кэшировать карту
    свободного места тома (сотни Кбайт) и
    записи MFT для файлов, с которыми
    осуществляется работа (в типичной
    системе - по 1 Кбайт на каждый файл). К
    счастью, NTFS имеет удачную систему
    хранения данных, которая не приводит к
    увеличению каких-либо фиксированных
    областей при увеличении объема диска.
    Количество данных, с которым оперирует
    система на основе NTFS, практически не
    зависит от объема тома, и основной вклад в
    объемы данных, которые необходимо
    кэшировать, вносят каталоги. Тем не менее,
    уже этого вполне достаточно для того,
    чтобы только <em>минимальный&nbsp;</em> объем
    данных, необходимых для кэширования
    базовых областей NTFS, доходил до 5 - 8 Мбайт.</li>
</ul>
<p>К сожалению, можно с уверенностью сказать:
NTFS теряет огромное количество своего
теоретического быстродействия из-за
недостаточного кэширования. На системах,
имеющих <strong>менее 64 Мбайт памяти</strong>, NTFS
просто <em>не может</em>&nbsp; оказаться быстрее
FAT16 или FAT32. Единственное исключение из
этого правила - диски FAT32, имеющие объем
десятки Гбайт (я бы лично серьезно опасался
дисков FAT32 объемом свыше, скажем, 30 Гбайт). В
остальных же случаях - системы с менее чем 64
мегабайтами памяти просто обязаны работать
с FAT32 быстрее.</p>
<p>Типичный в настоящее время объем памяти в <strong>64
Мбайта</strong>, к сожалению, также не дает
возможности организовать эффективную
работу с NTFS. На малых и средних дисках (до 10
Гбайт) в типичных системах FAT32 будет
работать, пожалуй, немного быстрее.
Единственное, что можно сказать по поводу
быстродействия систем с таким объемом
оперативной памяти - системы, работающие с
FAT32, будут гораздо сильнее страдать от
фрагментации, чем системы на NTFS. Но если
хотя бы изредка дефрагментировать диски, то
FAT32, с точки зрения быстродействия, является
предпочтительным вариантом. Многие люди,
тем не менее, выбирают в таких системах NTFS -
просто из-за того, что это даст некоторые
довольно важные преимущества, тогда как
типичная потеря быстродействия не очень
велика.</p>
<p>Системы с <strong>более чем 64 Мбайтами</strong>, а
особенно - со 128 Мбайт и более памяти, смогут
уверенно кэшировать абсолютно всё, что
необходимо для работы систем, и вот на таких
компьютерах NTFS, скорее всего, покажет более
высокое быстродействие из-за более
продуманной организации данных.</p>
<h3>2.2. Быстродействие накопителя</h3>
<p>Влияют ли физические параметры жесткого
диска на быстродействие файловой системы?
Да, хоть и не сильно, но влияют. Можно
выделить следующие параметры физической
дисковой системы, которые по-разному влияют
на разные типы файловых систем:</p>
<ul>
  <li>Время случайного доступа (random seek time). К
    сожалению, для доступа к системным
    областям на типичном диске более сложной
    файловой системы (NTFS) приходится
    совершать, в среднем, больше движений
    головками диска, чем в более простых
    системах (FAT16 и FAT32). Гораздо большая
    фрагментация каталогов, возможность
    фрагментации системных областей - всё это
    делает диски NTFS гораздо более
    чувствительными к скорости считывания
    произвольных (случайных) областей диска.
    По этой причине использовать NTFS на
    медленных (старых) дисках не
    рекомендуется, так как высокое (худшее)
    время поиска дорожки дает еще один плюс в
    пользу систем FAT.
  <li>Наличие Bus Mastering. Bus Mastering - специальный
    режим работы драйвера и контроллера, при
    использовании которого обмен с диском
    производится без участия процессора.
    Стоит отметить, что система
    запаздывающего кэширования NTFS сможет
    действовать гораздо более эффективно при
    наличии Bus Mastering, т.к. NTFS производит
    отложенную запись гораздо большего числа
    данных. Системы без Bus Mastering в настоящее
    время встречаются достаточно редко (обычно
    это накопители или контроллеры,
    работающие в режиме PIO3 или PIO4), и если вы
    работаете с таким диском - то, скорее
    всего, NTFS потеряет еще пару очков
    быстродействия, особенно при операциях
    модификации каталогов (например,
    активная работа в интернете - работа с
    кэшем интернета).
  <li>Кэширование как чтения, так и записи на
    уровне жестких дисков (объем буфера HDD - от
    128 Кбайт до 1-2 Мбайт в современных дорогих
    дисках) - фактор, который будет более
    полезен системам на основе FAT. NTFS из
    соображений надежности хранения
    информации осуществляет модификацию
    системных областей с флагом &quot;не
    кэшировать запись&quot;, поэтому
    быстродействие системы NTFS слабо зависит
    от возможности кэширования самого HDD.
    Системы FAT, напротив, получат некоторый
    плюс от кэширования записи на физическом
    уровне. Стоит отметить, что, вообще говоря,
    всерьез принимать в расчет размер буфера
    HDD при оценке быстродействия тех или иных
    файловых систем не стоит.</li>
</ul>
<p>Подводя краткий итог влиянию
быстродействия диска и контроллера на
быстродействия системы в целом, можно
сказать так: NTFS страдает от медленных
дисков гораздо сильнее, чем FAT.</p>
<h3>2.3. Размер кластера</h3>
<p>Хотелось бы сказать пару слов о размере
кластера - тот параметр, который в файловых
системах FAT32 и NTFS можно задавать при
форматировании практически произвольно.
Прежде всего, надо сказать, что больший
размер кластера - это <em>практически всегда</em>&nbsp;
большее быстродействие. Размер кластера на
томе NTFS, однако, имеет меньшее влияние на
быстродействие, чем размер кластера для
системы FAT32.</p>
<ul>
  <li>Типичный размер кластера для NTFS - 4
    Кбайта. Стоит отметить, что с большим
    размером кластера отключается
    встроенная в файловую систему
    возможность сжатия индивидуальных
    файлов, а также перестает работать
    встроенный API дефрагментации - т.е.
    подавляющее число дефрагментаторов, в
    том числе встроенный в Windows 2000, будут
    неспособны дефрагментировать этот диск.
    SpeedDisk, впрочем, сможет - он работает не
    через это API. Оптимальным с точки зрения
    быстродействия, по крайней мере, для
    средних и больших файлов, считается (самой
    Microsoft) размер 16 Кбайт. Увеличивать размер
    далее неразумно из-за слишком больших
    расходов на неэффективность хранения
    данных и из-за мизерного дальнейшего
    увеличения быстродействия. Если вы
    хотите повысить быстродействие NTFS ценой
    потери возможности сжатия - задумайтесь о
    форматировании диска с размером кластера,
    большим чем 4 Кбайта. Но имейте в виду, что
    это даст довольно скромный прирост
    быстродействия, который часто не стоит
    даже уменьшения эффективности
    размещения файлов на диске.
  <li>Быстродействие системы FAT32, напротив,
    можно довольно существенно повысить,
    увеличив размер кластера. Если в NTFS
    размер кластера почти не влияет на размер
    и характер данных системных областей, то
    в системе FAT увеличивая кластер в два раза,
    мы сокращаем область FAT в те же два раза.
    Вспомните, что в типичной системе FAT32 эта
    очень важная для быстродействия область
    занимает несколько Мбайт. Сокращение
    области FAT в несколько раз даст заметное
    увеличение быстродействия, так как объем
    системных данных файловой системы сильно
    сократиться - уменьшается и время,
    затрачиваемое на чтение данных о
    расположении файлов, и объем оперативной
    памяти, необходимый для буферизирования
    этой информации. Типичный объем кластера
    для систем FAT32 составляет тоже 4 Кбайт, и
    увеличение его до 8 или даже до 16 Кбайт -
    особенно для больших (десяток и более
    гигабайт) дисков - достаточно разумный
    шаг.</li>
</ul>
<h3>2.4. Другие соображения</h3>
<p>NTFS является достаточно сложной системой,
поэтому, в отличие от FAT16 и FAT32, имеются и
другие факторы, которые могут привести к
существенному замедлению работы NTFS:</p>
<ul>
  <li>Диск NTFS был получен преобразованием
    раздела FAT16 или FAT32 (команда convert). Данная
    процедура в большинстве случаев
    представляет собой тяжелый случай для
    быстродействия, так как структура
    служебных областей NTFS, скорее всего,
    получится очень фрагментированной. Если
    есть возможность - избегайте
    преобразования других систем в NTFS, так
    как это приведет к созданию очень
    неудачного диска, которому не поможет
    даже типичный (неспециализированный)
    дефрагментатор, типа Diskeeper-а или
    встроенного в Windows 2000.
  <li>Активная работа с диском, заполненным
    более чем на 80% - 90%, представляет собой
    катастрофический для быстродействия NTFS
    случай, так как фрагментация файлов и,
    самое главное, служебных областей, будет
    расти фантастически быстро. Если ваш диск
    используется в таком режиме - FAT32 будет
    более удачным выбором при любых других
    условиях.<br>
    &nbsp;</li>
</ul>
<h2><font face="Times New Roman">3. Выводы</font></h2>
<p>В данной заключительной части &quot;одной
строчкой&quot; собраны ключевые особенности
быстродействия этих трех файловых систем.</p>
<h4>FAT - плюсы:</h4>
<ul>
  <li>Для эффективной работы требуется
    немного оперативной памяти.
  <li>Быстрая работа с малыми и средними
    каталогами.
  <li>Диск совершает в среднем меньшее
    количество движений головок (в сравнении
    с NTFS).
  <li>Эффективная работа на медленных дисках.</li>
</ul>
<h4>FAT - минусы:</h4>
<ul>
  <li>Катастрофическая потеря быстродействия
    с увеличением фрагментации, особенно для
    больших дисков (только FAT32).
  <li>Сложности с произвольным доступом к
    большим (скажем, 10% и более от размера
    диска) файлам.
  <li>Очень медленная работа с каталогами,
    содержащими большое количество файлов.</li>
</ul>
<h4>NTFS - плюсы:</h4>
<ul>
  <li>Фрагментация файлов не имеет
    практически никаких последствий для
    самой файловой системы - работа
    фрагментированной системы ухудшается
    только с точки зрения доступа к самим
    данным файлов.
  <li>Сложность структуры каталогов и число
    файлов в одном каталоге также не чинит
    особых препятствий быстродействию.
  <li>Быстрый доступ к произвольному
    фрагменту файла (например,
    редактирование больших .wav файлов).
  <li>Очень быстрый доступ к маленьким файлам
    (несколько сотен байт) - весь файл
    находится в том же месте, где и системные
    данные (запись MFT).</li>
</ul>
<h4>NTFS - минусы:</h4>
<ul>
  <li>Существенные требования к памяти
    системы (64 Мбайт - абсолютный минимум,
    лучше - больше).
  <li>Медленные диски и контроллеры без Bus
    Mastering сильно снижают быстродействие NTFS.
  <li>Работа с каталогами средних размеров
    затруднена тем, что они почти всегда
    фрагментированы.
  <li>Диск, долго работающий в заполненном на
    80% - 90% состоянии, будет показывать крайне
    низкое быстродействие.</li>
</ul>
<p>Хотелось бы еще раз подчеркнуть, что на
практике основной фактор, от которого
зависит быстродействие файловой системы -
это, как ни странно, объем памяти машины.
Системы с памятью 64-96 Мбайт - некий рубеж, на
котором быстродействие NTFS и FAT32 примерно
эквивалентно. Обратите внимание также на
сложность организации данных на вашей
машине. Если вы не используете ничего, кроме
простейших приложений и самой операционной
системы - может случиться так, что FAT32 сможет
показать более высокое быстродействие и на
машинах с большим количеством памяти.</p>
<p>NTFS - система, которая закладывалась на
будущее, и это будущее для большинства
реальных применений сегодняшнего дня еще, к
сожалению, видимо не наступило. На данный
момент NTFS обеспечивает стабильное и
равнодушное к целому ряду факторов, но,
пожалуй, всё же невысокое - на типичной &quot;игровой&quot;
домашней системе - быстродействие. Основное
преимущество NTFS с точки зрения
быстродействия заключается в том, что этой
системе безразличны такие параметры, как
сложность каталогов (число файлов в одном
каталоге), размер диска, фрагментация и т.д.
В системах FAT же, напротив, каждый из этих
факторов приведет к существенному снижению
скорости работы.</p>
<p>Только в сложных высокопроизводительных
системах - например, на графических
станциях или просто на серьезных офисных
компьютерах с тысячами документов, или, тем
более, на файл-серверах - преимущества
структуры NTFS смогут дать реальный выигрыш
быстродействия, который порой заметен
невооруженным глазом. Пользователям, не
имеющим большие диски, забитые информацией,
и не пользующимся сложными программами, не
стоит ждать от NTFS чудес скорости - с точки
зрения быстродействия на простых домашних
системах гораздо лучше покажет себя FAT32.<br>
&nbsp;</p>
<hr width="90%" noshade color="#D8D8D8" align="center">
<ul>
  <li> <a href="comp_ntfs.htm"><b>Структура NTFS</b></a></li>
  <li> <a href="comp_ntfs_frag.htm"><b>Фрагментация NTFS</b></a></li>
</ul>
<p>&nbsp;</p>
</td>
<td width="2%"></td>
</tr>
</table>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td background="images/h1.gif">&nbsp;<font size="2" face="Arial"><a href="index.htm">[на главную]</a></font></td>
<td background="images/h1.gif" valign="top">
<p align="right"><font size="2">11.10.2000&nbsp;</font></td>
</tr>
</table>


<br> </body>

</html>